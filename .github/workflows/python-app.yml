# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install uv
      shell: bash
      run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
    - name: Install dependencies with uv
      run: |
        uv sync
        source .venv/bin/activate
    - name: ruff-action
      # You may pin to the exact commit or the version.
      # uses: astral-sh/ruff-action@eaf0ecdd668ceea36159ff9d91882c9795d89b49
      uses: astral-sh/ruff-action@v3.4.0
      with:
        # Arguments passed to Ruff. Use `ruff --help` to see available options. Defaults to `check`.
        args: check
        # Source to run Ruff. Defaults to the current directory.
        src: ${{ github.workspace }}
        # The version of Ruff to use, e.g., `0.6.0` Defaults to the version in pyproject.toml or 'latest'.
        # version: # optional, default is 
        # Path to a pyproject.toml or requirements.txt file to read the version from.
        version-file: pyproject.toml
        # The checksum of the ruff version to install
        # checksum: # optional
        # Used to increase the rate limit when retrieving versions and downloading ruff.
        # github-token: # optional, default is ${{ github.token }}
    - name: Run type checking
      run: make typecheck
    - name: Test with pytest
      run: |
        make test-cov
